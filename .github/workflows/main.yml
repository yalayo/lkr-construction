name: CICD

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        required: true
        default: "production"

jobs:
  build:
    name: Build with shadow-cljs
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Build the nodejs app
        run: |
          cd ./projects/cloudflare/
          npm install
          npx shadow-cljs release server
          cp build/server.js terraform/
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Deploy with Terraform
        env:
          TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}

        run: |
            cd ./projects/cloudflare/terraform
            terraform init
            terraform apply -auto-approve
  terraform-plan:
    name: Suggest chages if any
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Deploy with Terraform
        env:
          TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}

        run: |
            cd ./projects/infrastructure/terraform
            terraform init
            terraform plan -out=tfplan
      - name: Save Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ./projects/infrastructure/terraform/tfplan
  terraform-apply:
    name: Apply chages if any
    needs: terraform-plan
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: ./projects/infrastructure/terraform
      - name: Apply
        env:
          TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}

        run: |
            cd ./projects/infrastructure/terraform
            ls -l
            terraform init
            terraform apply tfplan   
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@11.0
        with:
          cli: 1.11.1.1347
      - name: Cache clojure dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          # List all files containing dependencies:
          key: cljdeps-${{ hashFiles('deps.edn') }}
          restore-keys: cljdeps-